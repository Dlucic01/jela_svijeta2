class Tags
{
protected $db;
protected $upload;

public function __construct(DBConnInterface $db, Upload $upload)
{
$this->db = $db;
$this->upload = $upload;
}


function insertTags()
{

#$db = new SQLConnection;
#$user = new Upload($db);


$lang_counter = count(Lang::$faker_lang);





for ($k = 0; $k < $lang_counter; $k++) { $faker_lang=Lang::$faker_lang[$k]; $faker=Faker\Factory::create($faker_lang); //Generate Faker Titles $faker_tags=$faker->company;

    $faker_tag[] = $faker_tags;

    $faker_val = [
    0 => $faker_tag,
    ];


    // Generate Faker Slugs
    if ($k == 0) {
    $slug = [
    0 => Upload::slugMaker($faker_tag[0]),

    ];
    }
    }

    # $faker = Faker\Factory::create($faker_lang[$k]);
    for ($j = 0; $j < $lang_counter; $j++) { $this->upload->insert(array(
        "table" => Table::$value[1][$j],

        "column" => CTI::$value,
        "param" => $faker_val[0][$j],
        "slug" => $slug[0]
        ));
        }
        }
        }



































        class UploadMeals
        {
        private $dbConnection;

        public function __construct(DBConnInterface $dBConnInterface)
        {
        $this->dbConnection = $dBConnInterface;
        }

        public function insert(array $params)
        {
        $pdo = $this->dbConnection->connect();
        $sql = "INSERT INTO " . Values::$keymap['meals'] . "(title, description) VALUES (:title, :description)";

        $stmt = $pdo->prepare($sql);
        $stmt->bindParam(':title', $params['title']);
        $stmt->bindParam(':description', $params['description']);

        $stmt->execute();
        $pdo = null;
        }
        }

        class UploadRes
        {
        private $dbConnection;
        }

        ////////////////////////////////////////////////////77

        /7
        //

        p
        // Generate Category
        require_once '../vendor/autoload.php';
        require 'db.php';

        class Category
        {
        protected $db;
        protected $upload;

        public function __construct(DBConnInterface $db, Upload $upload)
        {
        $this->db = $db;
        $this->upload = $upload;
        }

        function generateCategory()
        {

        $lang_counter = count(Lang::$faker_lang);



        for ($c = 0; $c < $lang_counter; $c++) { $faker_lang=Lang::$faker_lang[$c]; $faker=Faker\Factory::create($faker_lang); $faker_category=$faker->streetName;

            $faker_cat[] = $faker_category;

            $faker_val = [
            0 => $faker_cat
            ];

            if ($c == 0) {
            $slug = [
            0 => Upload::slugMaker($faker_cat[0]),
            ];
            }
            }
            // Input Category
            for ($j = 0; $j < $lang_counter; $j++) { $user->insert(array(
                "table" => Table::$value[0][$j],
                "column" => CTI::$value,
                "param" => $faker_val[0][$j],
                "slug" => $slug[0]
                ));
                echo "<h2>!!!</h2>";

                echo ("
                <pre>" . print_r($faker_val, true) . "</pre>");


                echo "<h2>!!!</h2>";
                }
                }
                }

                $sql_conn = new SQLConnection;
                $upload = new Upload($sql_conn);
                $new_category = new Category($sql_conn, $upload);


                /////////////////////////////////////////////////////7

                class Category
                {

                protected $db;
                protected $upload;

                public function __construct(DBConnInterface $db, Upload $upload)
                {
                $this->db = $db;
                $this->upload = $upload;
                }
                #$faker_types = [
                # 0 => "streetName",
                # 1 => "company",
                # 2 => "name"
                # ];

                function insertCategory()
                {

                #$db = new SQLConnection;
                #$user = new Upload($db);


                $lang_counter = count(Lang::$faker_lang);
                echo $lang_counter;





                for ($k = 0; $k < $lang_counter; $k++) { $faker_lang=Lang::$faker_lang[$k]; $faker=Faker\Factory::create($faker_lang); //Generate Faker Titles $faker_category=$faker->streetName;
                    $faker_tags = $faker->company;
                    $faker_ingredients = $faker->name;

                    $faker_cat[] = $faker_category;
                    $faker_tag[] = $faker_tags;
                    $faker_ing[] = $faker_ingredients;

                    $faker_val = [
                    0 => $faker_cat,
                    1 => $faker_tag,
                    2 => $faker_ing
                    ];


                    // Generate Faker Slugs
                    if ($k == 0) {
                    $slug = [
                    0 => Upload::slugMaker($faker_cat[0]),
                    1 => Upload::slugMaker($faker_tag[0]),
                    2 => Upload::slugMaker($faker_ing[0])

                    ];
                    }
                    }

                    # $faker = Faker\Factory::create($faker_lang[$k]);
                    for ($i = 0; $i < $lang_counter; $i++) { for ($j=0; $j < $lang_counter; $j++) { $this->upload->insert(array(
                        "table" => Table::$value[$i][$j],

                        "column" => CTI::$value,
                        "param" => $faker_val[$i][$j],
                        "slug" => $slug[$i]
                        ));
                        }
                        }
                        }
                        }